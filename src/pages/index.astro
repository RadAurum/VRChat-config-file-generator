---
import { atom, map } from "nanostores";

import { Setting_Type } from "../utils/settings_type";

import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

import { TextField } from "../components/TextField";
import { NumberField } from "../components/NumberField";
import { Slider } from "../components/Slider";

import { ConfigDisplay } from "../components/ConfigDisplay";

import { default_settings } from "../utils/vrc_settings/vrc_default_settings";
import { settings } from "../utils/vrc_settings/vrc_settings";

export const $astro = Astro;

export const $test_value = atom(50);

export const $default_settings = default_settings;
export const $settings = settings;
---

<Layout title="VRChat config file generator">
	<main>
		<h1><span class="text-gradient">VRChat</span> config file generator</h1>
		<div class="flex flex-col">
			{
				Object.values($settings.get()).map((setting, index) => {
					// console.log(index)
					// console.log(setting.key)
					// console.log(setting.value)
					// console.log($default_settings.get());
					// if (setting.value === $default_settings.get()[setting.key].value)
					if (setting.type === Setting_Type.str) {
						return (
							<TextField
								client:visible
								url={Astro.url}
								valueName={setting.key}
							/>
						);
					}

					if (setting.type === Setting_Type.int) {
						return (
							<NumberField
								client:visible
								url={Astro.url}
								valueName={setting.key}
							/>
						);
					}

					if (setting.type === Setting_Type.rang) {
						return (
							<Slider
								client:visible
								url={Astro.url}
								min={setting.min}
								max={setting.max}
								valueName={setting.key}
							/>
						);
					}
				})
			}
			<ConfigDisplay client:visible />
			<!-- <p>{$default_settings.get()["cache_expiry_delay"]}</p> -->
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
</style>
